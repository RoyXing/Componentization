if (isRelease) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

def orderAndroidId = rootProject.ext.androidId
def orderId = rootProject.ext.appId
def support = rootProject.ext.dependencies

android {
    compileSdkVersion orderAndroidId.compileSdkVersion
    buildToolsVersion orderAndroidId.buildToolsVersion

    defaultConfig {
        if (!isRelease) {
            applicationId orderId.order
        }
        minSdkVersion orderAndroidId.minSdkVersion
        targetSdkVersion orderAndroidId.targetSdkVersion
        versionCode orderAndroidId.versionCode
        versionName orderAndroidId.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // 这个方法接收三个非空的参数，第一个：确定值的类型，第二个：指定key的名字，第三个：传值（必须是String）
        // 为什么需要定义这个？因为src代码中有可能需要用到跨模块交互，如果是组件化模块显然不行
        // 切记：不能在android根节点，只能在defaultConfig或buildTypes节点下
        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (!isRelease) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    // release 时 debug 目录下文件不需要合并到主工程
                    exclude '**/debug/**'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":common")
    support.each { k, v -> implementation v }
}
